# root 用户不能用来 SSH 连接
# 使用Gnome本地默认终端连接远程服务器，输入以下命令连接，然后输入密码认证
ssh vagrant@192.168.56.10
# 重置用户  vagrant 的 SSH 密码，默认为当前终端用户
sudo passwd vagrant


sudo apt update && sudo apt upgrade -y

大部分 Debian 的软件源配置文件使用传统的 One-Line-Style，路径为 /etc/apt/sources.list；
但是对于容器镜像，从 Debian 12 开始，其软件源配置文件变更为 DEB822 格式，路径为 /etc/apt/sources.list.d/debian.sources。
一般情况下，将对应文件中 Debian 默认的源地址 http://deb.debian.org/ 替换为镜像地址即可。
cat /etc/apt/sources.list
cat /etc/apt/sources.list.d/debian.sources


Debian Buster 以上版本默认支持 HTTPS 源。如果遇到无法拉取 HTTPS 源的情况，请先使用 HTTP 源并安装：
sudo apt install apt-transport-https ca-certificates


配置加速镜像参考清华源： https://mirrors.tuna.tsinghua.edu.cn/help/debian/
echo "
# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware

deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware

deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware

# 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换
deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware
" | sudo tee /etc/apt/sources.list

cat /etc/apt/sources.list
sudo apt update && sudo apt upgrade -y




# 采用新版本格式，使用之前需要清除 /etc/apt/sources.list 中的内容
echo "" | sudo tee /etc/apt/sources.list

echo "
Types: deb
URIs: https://mirrors.tuna.tsinghua.edu.cn/debian
Suites: bookworm bookworm-updates bookworm-backports
Components: main contrib non-free non-free-firmware
Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg

# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释
Types: deb-src
URIs: https://mirrors.tuna.tsinghua.edu.cn/debian
Suites: bookworm bookworm-updates bookworm-backports
Components: main contrib non-free non-free-firmware
Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg

# 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换
Types: deb
URIs: https://mirrors.tuna.tsinghua.edu.cn/debian-security
Suites: bookworm-security
Components: main contrib non-free non-free-firmware
Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg

Types: deb-src
URIs: https://mirrors.tuna.tsinghua.edu.cn/debian-security
Suites: bookworm-security
Components: main contrib non-free non-free-firmware
Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg
" | sudo tee /etc/apt/sources.list.d/debian.sources

cat /etc/apt/sources.list.d/debian.sources
sudo apt update && sudo apt upgrade -y


sudo apt clean && sudo apt update && sudo apt dist-upgrade




由于  get.docker.com 和 download.docker.com 网站无法访问，可能导致失败
# Docker CE 默认的软件仓库配置如下：
deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirror.azure.cn/docker-ce/linux/debian bookworm stable

替换为清华源
echo "" | sudo tee /etc/apt/sources.list.d/docker.list

echo "
deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian bookworm stable
" | sudo tee /etc/apt/sources.list.d/docker.list

cat /etc/hosts
vim /etc/hosts

echo "
13.226.61.4 get.docker.com
13.224.163.28 download.docker.com
" | sudo tee -a /etc/hosts

Docker CE 软件仓库，配置参考清华源： https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/
export DOWNLOAD_URL="https://mirrors.tuna.tsinghua.edu.cn/docker-ce"
# 如您使用 curl
curl -fsSL https://get.docker.com/ | sudo -E sh
# 如您使用 wget ，二选一
wget -O- https://get.docker.com/ | sudo -E sh

# 如果你过去安装过 docker，先删掉：
for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done

# 首先安装依赖：
sudo apt update
sudo apt install ca-certificates curl gnupg

# 信任 Docker 的 GPG 公钥并添加仓库：
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

cat /etc/apt/sources.list.d/docker.list
# 最后安装  
sudo apt update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin





# 安装宝塔面板并破解，参考宝塔官网教程 	https://www.bt.cn/new/index.html
选择debian系统正式版
sudo wget -O install.sh https://download.bt.cn/install/install_lts.sh && bash install.sh ed8484bec
破解教程： https://blog.klwx.top/?p=196
curl https://io.bt.sy/install/update_panel.sh|bash




# Debian防火墙
debian默认使用 ufw 作为防火墙，使用参考博客	https://www.upx8.com/3180
sudo apt update
sudo apt install ufw
如果你在远程位置连接你的服务器，在启用 UFW 防火墙之前，你必须显式允许进来的 SSH 连接。否则，你将永远都无法连接到机器上。
sudo ufw allow 22/tcp
sudo ufw enable			启动 UFW
sudo ufw disable  		禁用UFW
sudo ufw status        		查看防火墙状态
sudo ufw status verbose		列出当前UFW规则
# 添加规则允许入站（allow）
sudo ufw allow smtp　         允许所有的外部IP访问本机的25/tcp (smtp)端口
sudo ufw deny smtp 　         禁止外部访问smtp服务 
sudo ufw allow 22/tcp 　      允许所有的外部IP访问本机的22/tcp (ssh)端口 
sudo ufw allow 2333/tcp 　    添加2333端口，仅TCP协议
sudo ufw allow 6666/udp 　    添加6666端口，仅UDP协议
sudo ufw allow 6380:6390/tcp 　   添加6380到6390之间的端口
sudo ufw delete allow smtp 　 删除上面建立的某条规则
sudo ufw allow ssh 　         添加22端口
sudo ufw allow http 　        添加80端口
sudo ufw allow https 　       添加443端口
sudo ufw allow 53 　          允许外部访问53端口(tcp/udp) 
# 删除规则允许入站（delete）
sudo ufw delete allow 2333/tcp
